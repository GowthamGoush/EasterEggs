const i=(i,t)=>{let s=Math.atan2(t,i);return s<-2.74||s>2.74?6:s<-1.96?7:s<-1.17?0:s<-.39?1:s<.39?2:s<1.17?3:s<1.96?4:s<2.74?5:void 0};class t{constructor(i){this.game=i,this.image=document.getElementById("bull"),this.collisionX=i.mouse.posX,this.collisionY=i.mouse.posY,this.collisionRadius=30,this.dx=0,this.dy=0,this.speedX=0,this.speedY=0,this.speedModifier=5,this.playerWidth=255,this.playerheight=256,this.width=this.playerWidth,this.height=this.playerheight,this.spriteX,this.spriteY,this.frameX=0,this.frameY=0}draw(i){i.drawImage(this.image,this.frameX*this.playerWidth,this.frameY*this.playerheight,this.playerWidth,this.playerheight,this.spriteX,this.spriteY,this.width,this.height),this.game.debug&&(i.beginPath(),i.arc(this.collisionX,this.collisionY,this.collisionRadius,0,2*Math.PI),i.save(),i.globalAlpha=.5,i.fill(),i.restore(),i.moveTo(this.game.mouse.posX,this.game.mouse.posY),i.lineTo(this.collisionX,this.collisionY),i.stroke())}update(){this.dx=this.game.mouse.posX-this.collisionX,this.dy=this.game.mouse.posY-this.collisionY,this.frameY=i(this.dx,this.dy);let t=Math.hypot(this.dx,this.dy);t>this.speedModifier?(this.speedX=this.dx/t||0,this.speedY=this.dy/t||0):(this.speedX=0,this.speedY=0),this.collisionX+=this.speedX*this.speedModifier,this.collisionY+=this.speedY*this.speedModifier,this.collisionX<this.collisionRadius?this.collisionX=this.collisionRadius:this.collisionX>this.game.width-this.collisionRadius&&(this.collisionX=this.game.width-this.collisionRadius),this.collisionY<this.game.topMargin+this.collisionRadius?this.collisionY=this.game.topMargin+this.collisionRadius:this.collisionY>this.game.height-this.collisionRadius&&(this.collisionY=this.game.height-this.collisionRadius),this.spriteX=this.collisionX-.5*this.width,this.spriteY=this.collisionY-.5*this.height-80,this.game.obstacles.forEach(i=>{let{collision:t,distance:s,sumOfRadii:h,dx:e,dy:o}=this.game.checkCollision(this,i);t&&(this.collisionX=i.collisionX+e/s*(h+1),this.collisionY=i.collisionY+o/s*(h+1))})}}var s=class{constructor(i,t){this.game=i,this.image=document.getElementById("obstacles"),this.collisionX=t.posX,this.collisionY=t.posY,this.obstacleWidth=250,this.obstacleHeight=250,this.width=this.obstacleWidth,this.height=this.obstacleHeight,this.spriteX=this.collisionX-.5*this.width,this.spriteY=this.collisionY-.5*this.width-80,this.frameX=Math.floor(4*Math.random()),this.frameY=Math.floor(3*Math.random()),this.collisionRadius=this.game.collisionRadius}draw(i){i.drawImage(this.image,this.frameX*this.obstacleWidth,this.frameY*this.obstacleHeight,this.obstacleWidth,this.obstacleHeight,this.spriteX,this.spriteY,this.width,this.height),this.game.debug&&(i.beginPath(),i.arc(this.collisionX,this.collisionY,this.collisionRadius,0,2*Math.PI),i.save(),i.globalAlpha=.5,i.fill(),i.restore(),i.stroke())}update(){}},h=class{constructor(i,t,s){this.game=i,this.image=document.getElementById("larva"),this.collisionRadius=30,this.speedY=Math.random()+1,this.spriteWidth=150,this.spriteHeight=150,this.width=this.spriteWidth,this.height=this.spriteHeight,this.collisionX=t,this.collisionY=s,this.spriteX=this.collisionX-.5*this.width,this.spriteY=this.collisionY-.5*this.height-30,this.frameX=0,this.frameY=Math.floor(2*Math.random()),this.markedForDeletion=!1}draw(i){i.drawImage(this.image,this.frameX*this.spriteWidth,this.frameY*this.spriteHeight,this.spriteWidth,this.spriteHeight,this.spriteX,this.spriteY,this.spriteWidth,this.spriteHeight),this.game.debug&&(i.beginPath(),i.arc(this.collisionX,this.collisionY,this.collisionRadius,0,2*Math.PI),i.save(),i.globalAlpha=.5,i.fill(),i.restore(),i.stroke())}update(){this.spriteX=this.collisionX-.5*this.width,this.spriteY=this.collisionY-.5*this.height-40,this.collisionY-=this.speedY,this.spriteY+(this.height-this.game.topMargin)<0&&(this.markedForDeletion=!0,this.game.removeGameObjects(),!this.game.over&&this.game.score++),[...this.game.obstacles,this.game.player].forEach(i=>{let{collision:t,distance:s,sumOfRadii:h,dx:e,dy:o}=this.game.checkCollision(this,i);t&&(this.collisionX=i.collisionX+e/s*(h+1),this.collisionY=i.collisionY+o/s*(h+1))}),[...this.game.toads].forEach(i=>{let{collision:t}=this.game.checkCollision(this,i);t&&(this.markedForDeletion=!0,this.game.removeGameObjects(),this.game.lostHatchlings++)})}},e=class{constructor(i){this.game=i,this.image=document.getElementById("egg"),this.collisionRadius=30,this.margin=2*this.collisionRadius,this.collisionX=this.margin+Math.random()*(this.game.width-2*this.margin),this.collisionY=this.game.topMargin+Math.random()*(this.game.height-this.game.topMargin-this.margin),this.spriteWidth=110,this.spriteHeight=135,this.width=this.spriteWidth,this.height=this.spriteHeight,this.spriteX,this.spriteY,this.hatchTimer=0,this.hatchInterval=1e4,this.markedForDeletion=!1}draw(i){if(i.drawImage(this.image,this.spriteX,this.spriteY),this.game.debug){i.beginPath(),i.arc(this.collisionX,this.collisionY,this.collisionRadius,0,2*Math.PI),i.save(),i.globalAlpha=.5,i.fill(),i.restore(),i.stroke();let t=(.001*this.hatchTimer).toFixed(0);i.fillText(t,this.collisionX,this.collisionY-2.5*this.collisionRadius)}}update(i){this.spriteX=this.collisionX-.5*this.width,this.spriteY=this.collisionY-.5*this.height-30,[...this.game.obstacles,...this.game.toads,...this.game.hatchlings,this.game.player].forEach(i=>{let{collision:t,distance:s,sumOfRadii:h,dx:e,dy:o}=this.game.checkCollision(this,i);t&&(this.collisionX=i.collisionX+e/s*(h+1),this.collisionY=i.collisionY+o/s*(h+1))}),(this.hatchTimer>this.hatchInterval||this.collisionY<this.game.topMargin)&&!this.game.over?(this.game.hatchlings.push(new h(this.game,this.collisionX,this.collisionY)),this.markedForDeletion=!0,this.game.removeGameObjects()):this.hatchTimer+=i}},o=class{constructor(i){this.game=i,this.image=document.getElementById("toad"),this.collisionRadius=30,this.speedX=3*Math.random()+.5,this.margin=2*this.collisionRadius,this.spriteWidth=140,this.spriteHeight=260,this.width=this.spriteWidth,this.height=this.spriteHeight,this.collisionX=this.game.width+this.width+Math.random()*this.game.width*.5,this.collisionY=this.game.topMargin+Math.random()*(this.game.height-this.game.topMargin-this.margin),this.spriteX=this.collisionX-.5*this.width,this.spriteY=this.collisionY-.5*this.height-30,this.frameX=0,this.frameY=Math.floor(4*Math.random())}draw(i){i.drawImage(this.image,this.frameX*this.spriteWidth,this.frameY*this.spriteHeight,this.spriteWidth,this.spriteHeight,this.spriteX,this.spriteY,this.spriteWidth,this.spriteHeight),this.game.debug&&(i.beginPath(),i.arc(this.collisionX,this.collisionY,this.collisionRadius,0,2*Math.PI),i.save(),i.globalAlpha=.5,i.fill(),i.restore(),i.stroke())}update(){this.spriteX=this.collisionX-.5*this.width,this.spriteY=this.collisionY-.5*this.height-60,this.collisionX-=this.speedX,this.spriteX+this.width<0&&!this.game.over&&(this.collisionX=this.game.width+this.width+Math.random()*this.game.width*.5,this.collisionY=this.game.topMargin+Math.random()*(this.game.height-this.game.topMargin-this.margin),this.frameY=Math.floor(4*Math.random())),[...this.game.obstacles,this.game.player].forEach(i=>{let{collision:t,distance:s,sumOfRadii:h,dx:e,dy:o}=this.game.checkCollision(this,i);t&&(this.collisionX=i.collisionX+e/s*(h+1),this.collisionY=i.collisionY+o/s*(h+1))})}};const l=({context:i,content:t,posX:s,posY:h,align:e,fontStyle:o})=>{i.font=o,i.textAlign=e,i.fillText(t,s,h)},a=({gameWidth:i,gameHeight:t,verticalMargin:s=0,horizontalMargin:h=0,size:e,count:o,distanceBuffer:l=0})=>{let a=[];for(let n=0;n<500&&o>0;n++){let n=Math.random()*i,r=Math.random()*t,c=!1;for(let i=0;i<a.length;i++){let t=a[i],s=t.posX-n;if(Math.hypot(t.posY-r,s)<Math.max(2*e,l)){c=!0;break}}!c&&n>h+2*e&&r>s+2*e&&n<i-e&&r<t&&(a.push({posX:n,posY:r}),o--)}return a},n=({score:i=0,lostHatchlings:t=0})=>i>=30||t>=15,r=({score:i=0,lostHatchlings:t})=>{let s="Press 'R' to restart the game";return i>=30?{title:"AWESOME!!!",description:`You nailed it with ${i} points!`,restartText:s}:i>=Math.floor(27)?{title:"SO CLOSE!!!",description:`Almost there with ${i} points!`,restartText:s}:{title:"OOPS!!!",description:`You lost ${t} hatchlings!`,restartText:s}};class c{constructor(i){this.canvas=i,this.width=this.canvas.width,this.height=this.canvas.height,this.debug=!1,this.topMargin=260,this.obstaclesCount=5,this.collisionRadius=60,this.obstacleMinSpacing=200,this.obstacles=[],this.eggs=[],this.toads=[],this.hatchlings=[],this.eggTimer=0,this.eggInterval=1e3,this.eggCountMax=10,this.toadCountMax=5,this.lostHatchlings=0,this.score=0,this.over=!1,this.mouse={posX:.5*this.width,posY:.5*this.height,pressed:!1},this.player=new t(this),i.addEventListener("mousedown",i=>{this.mouse.posX=i.offsetX,this.mouse.posY=i.offsetY,this.mouse.pressed=!0}),i.addEventListener("mousemove",i=>{this.mouse.pressed&&(this.mouse.posX=i.offsetX,this.mouse.posY=i.offsetY)}),i.addEventListener("mouseup",i=>{this.mouse.posX=i.offsetX,this.mouse.posY=i.offsetY,this.mouse.pressed=!1}),window.addEventListener("keydown",i=>{"d"===i.key&&(this.debug=!this.debug)})}init(){a({gameWidth:this.width,gameHeight:this.height,verticalMargin:this.topMargin,size:this.collisionRadius,count:this.obstaclesCount,distanceBuffer:this.obstacleMinSpacing}).forEach(i=>{this.obstacles.push(new s(this,i))}),this.addToads()}addEgg(){this.eggs.push(new e(this))}addToads(){for(let i=0;i<this.toadCountMax;i++)this.toads.push(new o(this))}removeGameObjects(){this.eggs=this.eggs.filter(i=>!i.markedForDeletion),this.hatchlings=this.hatchlings.filter(i=>!i.markedForDeletion)}checkCollision(i,t){let s=i.collisionX-t.collisionX,h=i.collisionY-t.collisionY,e=Math.hypot(h,s),o=i.collisionRadius+t.collisionRadius;return{collision:e<o,distance:e,sumOfRadii:o,dx:s,dy:h}}render(i,t){let s=[...this.obstacles,...this.eggs,...this.toads,...this.hatchlings,this.player];if(s.sort((i,t)=>i.collisionY-t.collisionY),s.forEach(s=>{s.draw(i),s.update(t)}),this.eggTimer>this.eggInterval&&this.eggs.length<this.eggCountMax&&!this.over?(this.addEgg(),this.eggTimer=0):this.eggTimer+=t,i.save(),i.textAlign="left",i.fillText(`Score: ${this.score}`,25,50),this.debug&&i.fillText(`Lost: ${this.lostHatchlings}`,25,100),i.restore(),n({score:this.score,lostHatchlings:this.lostHatchlings})){this.over=!0,i.save(),i.fillStyle="rgba(0,0,0,0.5)",i.fillRect(0,0,this.width,this.height),i.shadowColor="black",i.shadowOffsetX=4,i.shadowOffsetY=4,i.fillStyle="white",i.textAlign="center";let{title:t,description:s,restartText:h}=r({score:this.score,lostHatchlings:this.lostHatchlings});l({context:i,content:t,posX:.5*this.width,posY:.4*this.height,align:"center",fontStyle:"130px Hevetica"}),l({context:i,content:s,posX:.5*this.width,posY:.5*this.height,align:"center",fontStyle:"40px Hevetica"}),l({context:i,content:h,posX:.5*this.width,posY:.95*this.height,align:"center",fontStyle:"30px Hevetica"}),i.restore()}}}window.addEventListener("load",function(){let i=document.getElementById("game-canvas"),t=i.getContext("2d");i.width=1280,i.height=720,t.fillStyle="white",t.strokeStyle="white",t.font="40px Helvetica",t.textAlign="center";let s=new c(i);s.init();let h=0;!function e(o){let l=o-h;h=o,t.clearRect(0,0,i.width,i.height),s.render(t,l),window.requestAnimationFrame(e)}(0)});
//# sourceMappingURL=index.51f2a1fe.js.map
